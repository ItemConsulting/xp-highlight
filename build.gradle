plugins {
  id 'java'
  id 'maven-publish'
  id "com.github.node-gradle.node" version "7.1.0"
  id "com.enonic.xp.app" version "3.5.2"
  id "no.item.xp.codegen" version "2.6.3"
}

app {
  name = "${appName}"
  displayName = "${appDisplayName}"
  vendorName = "${vendorName}"
  vendorUrl = "${vendorUrl}"
  systemVersion = "${xpVersion}"
}

repositories {
  mavenLocal()
  mavenCentral()
  xp.enonicRepo()
  maven { url "https://repo.itemtest.no/releases" }
}

node {
  download = true
  version = "22.12.0"
}

tasks.withType(Copy).configureEach {
  includeEmptyDirs = false
}

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

def highlightVersion = '11.11.1'

dependencies {
  include "com.enonic.xp:lib-portal:${xpVersion}"
  webjar "org.webjars.npm:highlight.js:${highlightVersion}"
}

tasks.register("dev", NpmTask) {
  args = [
    "run",
    "watch"
  ]
  dependsOn npmInstall, deploy
  environment = [
    "FORCE_COLOR": "true",
  ]
}

tasks.register("npmCheck", NpmTask) {
  dependsOn npmInstall
  args = [
    "run",
    "check"
  ]
  environment = [
    "FORCE_COLOR": "true",
  ]
}

// If you ALWAYS want to SKIP `test` and `check` tasks on development build, wrap this inside an 'if...'
// if (!(project.hasProperty('dev') || project.hasProperty('development'))) {
check.dependsOn npmCheck
// }

tasks.register("npmBuild", NpmTask) {
  args = [
    "run",
    "--silent",
    project.hasProperty("dev") || project.hasProperty("development") ? "build" : "minify"
  ]
  dependsOn npmInstall
  dependsOn generateTypeScript
  environment = [
    "FORCE_COLOR": "true",
    "LOG_LEVEL_FROM_GRADLE": gradle.startParameter.logLevel.toString(),
    "NODE_ENV": project.hasProperty("dev") || project.hasProperty("development") ? "development" : "production"
  ]
  inputs.dir "src/main/resources"
  outputs.dir "build/resources/main"
}

jar.dependsOn npmBuild

processResources {
  exclude "**/.gitkeep"
  exclude "**/*.json"
  exclude "**/*.png"
  exclude "**/*.ts"
  exclude "**/*.css"
  exclude "**/*.mdx"
}


task createHighlightConfigJson {
  def cssFolder = new File("${rootDir}/node_modules/highlight.js/styles")
  def langFolder = new File("${rootDir}/node_modules/highlight.js/es/languages")
  def destFile = new File("${rootDir}/src/main/resources/highlight-config.json")
  def builder = new groovy.json.JsonBuilder()

  builder {
    version highlightVersion
    cssFiles(
      cssFolder.listFiles()
        .findAll { it.name.contains(".min.css") }
        .collect { it.name }
        .sort()
    )
    languageFiles(
      langFolder.listFiles()
        .findAll {it.name.contains(".js")}
        .findAll {!it.name.contains(".js.js")}
        .collect {it.name }
        .sort()
    )
  }

  destFile.write(builder.toPrettyString() + "\n")
  println("Updated \"${destFile.name}\"")
}

publishing {
  repositories {
    maven {
      name = "itemtestRepository"
      url = "https://repo.itemtest.no/releases"
      credentials(PasswordCredentials)
      authentication {
        basic(BasicAuthentication)
      }
    }
  }
  publications {
    maven(MavenPublication) {
      from components.java
      groupId group
      artifactId projectName
      version version
    }
  }
}
